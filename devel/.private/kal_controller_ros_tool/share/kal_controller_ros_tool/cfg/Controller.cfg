#!/usr/bin/env python
# *********************************************************
#
# File autogenerated for the kal_controller_ros_tool package
# by the rosinterface_handler package.
# Please do not edit.
#
# ********************************************************/

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

verbosity = gen.enum([
    gen.const(name='debug', type='str', value='debug', descr=''),
    gen.const(name='info', type='str', value='info', descr=''),
    gen.const(name='warning', type='str', value='warning', descr=''),
    gen.const(name='error', type='str', value='error', descr=''),
    gen.const(name='fatal', type='str', value='fatal', descr=''),
    ], 'Sets the verbosity for this node')
gen.add(name = 'verbosity', paramtype = 'str', level = 0, description = 'Sets the verbosity for this node', edit_method=verbosity, default="info")
gen.add(name = 'k_angular', paramtype = 'double', level = 0, description = 'Angle weight [-]', edit_method="", min=0, max=10)
gen.add(name = 'k_distance', paramtype = 'double', level = 0, description = 'Distance weight [-]', edit_method="", min=0, max=10)
gen.add(name = 'look_ahead_index', paramtype = 'int', level = 0, description = 'Index shift of lookahead point [-]', edit_method="", min=1, max=50)
gen.add(name = 'publish_debug_info', paramtype = 'bool', level = 0, description = 'Whether or not to publish debug info', edit_method="")
gen.add(name = 'steering_angle_max', paramtype = 'double', level = 0, description = 'The maximum steering angle [rad]', edit_method="", min=0.0, max=1.0)
gen.add(name = 'trajectory_age_max', paramtype = 'double', level = 0, description = 'Maximum age of last trajectory before stopping the vehicle [s]', edit_method="", min=0.1, max=5.0)
gen.add(name = 'min_velocity_threshold', paramtype = 'double', level = 0, description = 'Desired velocity threshold below which the car stops driving [m/s]', edit_method="", min=0.01, max=2)
Publisherandsubscriber = gen.add_group('Publisher and subscriber')

exit(gen.generate('kal_controller_ros_tool', 'controller', 'Controller'))
