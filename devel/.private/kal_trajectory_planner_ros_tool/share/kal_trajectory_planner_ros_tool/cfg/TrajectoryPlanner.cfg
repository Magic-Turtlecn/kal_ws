#!/usr/bin/env python
# *********************************************************
#
# File autogenerated for the kal_trajectory_planner_ros_tool package
# by the rosinterface_handler package.
# Please do not edit.
#
# ********************************************************/

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

verbosity = gen.enum([
    gen.const(name='debug', type='str', value='debug', descr=''),
    gen.const(name='info', type='str', value='info', descr=''),
    gen.const(name='warning', type='str', value='warning', descr=''),
    gen.const(name='error', type='str', value='error', descr=''),
    gen.const(name='fatal', type='str', value='fatal', descr=''),
    ], 'Sets the verbosity for this node')
gen.add(name = 'verbosity', paramtype = 'str', level = 0, description = 'Sets the verbosity for this node', edit_method=verbosity, default="info")
gen.add(name = 'desired_speed', paramtype = 'double', level = 0, description = 'Desired speed [m/s]', edit_method="", min=0.5, max=20.0)
gen.add(name = 'polynomial_degree', paramtype = 'int', level = 0, description = 'The degree of the polynomial used to estimate the trajectory', edit_method="", min=0, max=10)
gen.add(name = 'trajectory_length', paramtype = 'double', level = 0, description = 'Minimum length of the trajectory [m]', edit_method="", min=0, max=10)
gen.add(name = 'trajectory_num_of_points', paramtype = 'int', level = 0, description = 'The number of points the published trajectory will have', edit_method="", min=2, max=100)
Publisherandsubscriber = gen.add_group('Publisher and subscriber')

exit(gen.generate('kal_trajectory_planner_ros_tool', 'trajectory_planner', 'TrajectoryPlanner'))
